1. To clone remote repository:
git clone https://github.com/imochurad/test (with auth: git clone username@host:/path/to/repository)

2. To add file to the local index:
git add 'GIT cheat sheet.txt' (git add *)

NOTE! You have to add changes to the local index every time the change was made. If file was modified after the file was added to the local index, when commiting to local repository, only changes that were made at the moment of addition to the local index will be propagated.

3. To commit changes to the local HEAD:
git commit -m "Commit message"

4. To send changes to the remote repository (branch master): 
git push origin master
Username for 'https://github.com': imochurad
Password for 'https://imochurad@github.com':

5. To create new branch in local repository based on the master:
git checkout -b feature_01

6. To push newly created branch to remote repository:
git push origin feature_01

7. To merge current branch(for example master) with another branch(feature_01):

git merge feature01

Note! When merging with conflicts, git will show a following message:
CONFLICT (content): Merge conflict in GIT cheat sheet.txt
When file is opened in the text editor it will show changes made in the 2 branches.
<<<<<<< HEAD is current branch into which changes are about to be merged!
After conflict was resolved change must be added to the local index, then committed to local repository only after that pushed along with other non-conflicting changes:
git add <conflicting_file_name>
git commit -m “Merge message”
git push origin <branch_name>

8. To switch branches use (for example feature_01):
git checkout feature01

9. To delete a branch use:
a) git push origin --delete name_of_the_branch

This will remove remote branch only. To remove branch locally:
git branch -d name_of_the_branch (this will delete merged branches only)
git branch -D name_of_the_branch (this will delete unmerged branches only)

To find out if branch is merged/unmerged:
git branch —merged
git branch —no-merged

OR:
b)
git branch -d name_of_the_branch (this will delete merged branches only)
git branch -D name_of_the_branch (this will delete unmerged branches only)

After this to remove this branch from remote repository run:
git push origin : name_of_the_branch


10. To commit a change straigh to the local repository, without exlpicitly adding it to the index (it will avoid the process of staging a file):
git commit -a -m “Message”

11. To remove a file (force remove) that has been already staged in the local index (it will actually delete a file from the folder and from the index):
git rm -f deleteMe.txt

12. To remove a file from local index (it will stay physically on the disk):
git rm —cached deleteMe.txt

13. To figure out diffs between local repository and a working directory run:
git diff
But this will not show new files that have been added and are still untracked.

14. To figure out diffs betweel local repository and local index (files that have been staged) run:
git diff —cached

15. To show all files modified(created, changed, removed) in the local working directory:
git status

16. To rename a file that was already staged:
git mv fileName newFileName

17. Replace local changes (in case you did something wrong, changes in the working directory can be replaced with the last content in HEAD)

git checkout --<filename>

git checkout .

^ this will revert all changes made to the working copy

Note that changes already added to the index, as well as new files, will be kept.

18. To revert changes made to the index:

git reset

Warning: this will reset all of your unpushed commits to master!

19. To revert a change that has been committed, do this:

git log <—— pick a commit that needs to be reverted
git revert <commit_id>
git git push origin <branch>

Note! in order to revert several commits procedure must be repeated depending on the postion of the commit in the list

20. To preview diffs between 2 branches (might be useful before merge):
git diff <source_branch> <target_branch>

21. To drop all local changes and commits, fetch the latest history from the server and point local master branch at it:

git fetch origin
git reset --hard origin/master

22. To retrieve up-to-date data from the remote repo and merge it with the local work directory: 

git pull

Note, it doesn’t require before running this command to check in changes made to the local copy.

23. git branch
Lists all branches for the current repo. The branch with the * near it is the current branch.





